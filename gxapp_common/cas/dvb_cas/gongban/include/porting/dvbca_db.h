#ifndef _DVBCA_DB_H_
#define _DVBCA_DB_H_

typedef enum _EN_CA_DB_ERROR
{
	CA_DB_REFRESH = 1,
	CA_DB_SUCCESS = 0,
	CA_DB_NULL_PTR = -1,
	CA_DB_UNKNOW_CMD = -2,
	CA_DB_EXIST = -3,
	CA_DB_NOT_EXIST = -4,
	CA_DB_FULL = -5,
	CA_DB_FAILED = -6,
}EN_CA_DB_ERROR;

typedef enum _EN_CA_DB_CMD
{
	CA_DB_CMD_DATE,
	CA_DB_CMD_TIME,	
}EN_CA_DB_CMD;

#define DVBCA_DB_PROMPT_TAG				(0x80)

#define DVBCA_DB_FLASH_SIZE					(64*1024)

#define MAX_MSG_ID 							(125)

#define MSG_ID_REPEAT_TIMES				(250)

#define MAIL_REPEAT_TIMES					(100)

#define DVBCA_DB_HEAD_SIZE					(4)

#define DVBCA_DB_FREQVER_TIMES				(500)
#define DVBCA_DB_FACETIME_TIMES			(500)
#define DVBCA_DB_NETNAME_TIMES				(100)
#define DVBCA_DB_NETWORK_TIMES			(500)

#define DVBCA_DB_PROMPT_SIZE		              (6*1024)


#define DVBCA_DB_MAIL_SIZE					(sizeof(ST_CA_MAIL) * MAIL_REPEAT_TIMES)
#define DVBCA_DB_DELMAIL_SIZE				(2 * MAIL_REPEAT_TIMES * 2)
#define DVBCA_DB_FREQVER_SIZE				(sizeof(DVBCA_UINT8) * DVBCA_DB_FREQVER_TIMES)
#define DVBCA_DB_FACETIME_SIZE				(sizeof(DVBCA_UINT8) * DVBCA_DB_FACETIME_TIMES)
#define DVBCA_DB_NETNAME_SIZE				(sizeof(DVBCA_UINT8) * DVBCA_NET_NAME_LEN * DVBCA_DB_NETNAME_TIMES)
#define DVBCA_DB_NETWORK_SIZE				(sizeof(DVBCA_UINT32) * DVBCA_DB_FREQVER_TIMES)


#define DVBCA_DB_SIZE						(DVBCA_DB_HEAD_SIZE + DVBCA_DB_MAIL_SIZE + \
												DVBCA_DB_DELMAIL_SIZE + DVBCA_DB_FREQVER_SIZE +\
												DVBCA_DB_FACETIME_SIZE + DVBCA_DB_NETNAME_SIZE + \
												DVBCA_DB_NETWORK_SIZE)


#define DVBCA_DB_HEAD_OFFSET				(0)

#define DVBCA_DB_MAIL_OFFSET				(DVBCA_DB_HEAD_OFFSET + DVBCA_DB_HEAD_SIZE)

#define DVBCA_DB_DELMAIL_OFFSET			(DVBCA_DB_MAIL_OFFSET + DVBCA_DB_MAIL_SIZE)
#define DVBCA_DB_FREQVER_OFFSET			(DVBCA_DB_DELMAIL_OFFSET + DVBCA_DB_DELMAIL_SIZE)
#define DVBCA_DB_FACETIME_OFFSET			(DVBCA_DB_FREQVER_OFFSET + DVBCA_DB_FREQVER_SIZE)
#define DVBCA_DB_NETNAME_OFFSET			(DVBCA_DB_FACETIME_OFFSET + DVBCA_DB_FACETIME_SIZE)
#define DVBCA_DB_NETWORK_OFFSET			(DVBCA_DB_NETNAME_OFFSET + DVBCA_DB_NETNAME_SIZE)
#define DVBCA_DB_PROMPT_OFFSET                      (DVBCA_DB_NETWORK_OFFSET + DVBCA_DB_NETWORK_SIZE)

typedef struct _ST_CA_MAIL
{
	DVBCA_UINT8 usUsedFlag;
	DVBCA_UINT16 usMailID;
	DVBCA_UINT8 aucTitle[DVBCA_MAIL_TITLE_SIZE];
	DVBCA_UINT8 aucTerm[DVBCA_MAIL_TERM_SIZE];	
	DVBCA_UINT8 aucContext[DVBCA_MAIL_CONTEXT_SIZE];
}ST_CA_MAIL;


typedef struct _ST_CA_PROMPT
{
	DVBCA_UINT8 ucVersion;
	DVBCA_UINT16 usLength;
	DVBCA_UINT16 usOffset;
}ST_CA_PROMPT;

typedef struct _ST_CA_DB
{
	DVBCA_UINT32	uiMagic;
	DVBCA_UINT8	ucFaceTime;
	DVBCA_UINT8	ucFreqVer;
	DVBCA_UINT8	aucNetName[DVBCA_NET_NAME_LEN + 1];
	DVBCA_UINT16	usTime;
	DVBCA_UINT16	usDate;
	ST_CA_MAIL 	astMail[MAIL_REPEAT_TIMES];
	DVBCA_UINT16	ausDelMailID[MAIL_REPEAT_TIMES*2];
	DVBCA_UINT16	usMailNum;
	DVBCA_UINT16	usDelMailNum;
	DVBCA_UINT32	uiNetworkID;

	DVBCA_UINT8	aucPromptData[DVBCA_DB_PROMPT_SIZE];
	ST_CA_PROMPT	stPrompt;
}ST_CA_DB;


int DVBCA_DB_Init(void);
void DVBCA_DB_Default(void);
int DVBCA_DB_AddMail(DVBCA_UINT8 *pucBuffer, DVBCA_UINT16 usLen);
int DVBCA_DB_Get(EN_CA_DB_CMD enCmd, void *pValue);
int DVBCA_DB_Set(EN_CA_DB_CMD enCmd, DVBCA_UINT32 uiValue);
int DVBCA_DB_SetFreqVer(DVBCA_UINT8 ucFreqVer);
DVBCA_UINT8 DVBCA_DB_GetFreqVer(void);
void DVBCA_DB_SetFaceTime(DVBCA_UINT8 ucFaceTime);
void DVBCA_DB_SetNetName(DVBCA_UINT8 *pucNetName);
int DVBCA_DB_SetNetwork(DVBCA_UINT32 uiNetworkID);
DVBCA_UINT32 DVBCA_DB_GetNetwork(void);
void DVBCA_DB_GetNetName(DVBCA_UINT8 *pucNetName);
DVBCA_UINT8 DVBCA_DB_GetFaceTime(void);
DVBCA_UINT16 DVBCA_DB_GetMailNum(EN_CA_DB_MAIL_CMD enCmd);
DVBCA_UINT16 DVBCA_DB_GetMail(OUT ST_DVBCAEmail *pstMail, 
								DVBCA_UINT8 ucStartPos, 
								DVBCA_UINT16 usNum);
int DVBCA_DB_SetMailRead(DVBCA_UINT16 usMailID);
int DVBCA_DB_DelMail(DVBCA_UINT16 usMailID);
int DVBCA_DB_AddPromptMsg(DVBCA_UINT8 *pucBuffer, DVBCA_UINT16 usLen);
int DVBCA_DB_GetPromptMsg(DVBCA_UINT8 ucPromptID, DVBCA_UINT8 ucLanguage, DVBCA_UINT8 *pucText);

void DVBCA_DB_UnInit(void);
#endif




